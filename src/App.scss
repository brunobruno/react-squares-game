$primaryColor: snow;
$secondaryColor: black;
$gridSizes: 1,2,3,4,5,5,6,7,8,9,10,11,12,13,14,15,16;

body{
	margin:0;
}
@mixin bright($percentage,$color,$background:transparent) {
	color:$color;
	background:$background;
	filter: brightness($percentage);
}
.container {
	display: flex;
	height: 100vh;
	padding:0 .5rem;
	align-items: center;
	justify-content: center;
	background-color: $primaryColor;
	font-family: Arial, Helvetica, sans-serif;
	h1 {
		margin: 0;
		font-size: 2.4rem;
		user-select: none;
		&.lg{
			font-size: 10rem;
			@include bright(90%,$primaryColor);
		}
	}
	ul {
		&.stripe-count {
			overflow-y: auto;
			max-height: 70vh;
			text-transform: capitalize;
			li {
				padding: 1rem;
				display: flex;
				font-weight: bold;
				font-size: 1.5rem;
				border-radius: 0.5rem;
				justify-content: space-between;
				&:nth-of-type(odd) {
					@include bright(90%,$secondaryColor,$primaryColor);
				}
				&:before {
					counter-increment: counter;
					content: counter(counter) "-";
				}
			}
		}
	}
	.i-text {
		@include bright(90%,$secondaryColor,$primaryColor);
	}
	.btn {
		color: $primaryColor;
		background: $secondaryColor;
	}
	.board {
		width: 100%;
		display: grid;
		min-height: 25rem;
		.tile {
			cursor:pointer;
			border-radius: 0.5rem;
			filter: brightness(50%);
			&.selected {
				filter: brightness(100%);
			}
		}
	}
	@each $size in $gridSizes {
		.size-#{$size} {
			grid-template-rows: repeat(#{$size}, auto);
			grid-template-columns: repeat(#{$size}, auto);
			grid-gap: 0.5rem;
			.tiles {
				width: calc(100 / $size);
				height: calc(100 / $size);
			}
		}
	}
}
@media only screen and (max-width: 491px) {
	.container {
		.board {
			min-height: 50%;
		}
	}
}